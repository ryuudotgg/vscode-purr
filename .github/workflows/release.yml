name: Release

on:
  push:
    branches: ["main"]

  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  FORCE_COLOR: 3
  DO_NOT_TRACK: true

jobs:
  release:
    name: Release
    if: ${{ github.repository == 'ryuudotgg/vscode-purr' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Create a Pull Request & Release
        uses: changesets/action@v1
        id: changesets

        with:
          title: "feat(release): create a new release and update the version"
          commit: "feat(release): create a new release and update the version"
          publish: pnpm release

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Create VSIX Package
        if: steps.changesets.outputs.published == 'true'
        run: pnpm package

      - name: Upload VSIX to Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v2

        with:
          files: dist/purr.vsix
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          fail_on_unmatched_files: true

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
